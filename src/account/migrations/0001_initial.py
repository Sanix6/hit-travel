# Generated by Django 5.0.2 on 2024-02-09 10:37

import ckeditor.fields
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models

import src.account.managers
import src.base.services


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("main", "0009_currency"),
    ]

    operations = [
        migrations.CreateModel(
            name="FAQ",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("question", models.CharField(max_length=255, verbose_name="Вопрос")),
                ("answer", ckeditor.fields.RichTextField(verbose_name="Ответ")),
            ],
            options={
                "verbose_name": "FAQ",
                "verbose_name_plural": "FAQ",
            },
        ),
        migrations.CreateModel(
            name="Payments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("img", models.ImageField(upload_to="payments", verbose_name="QRCode")),
                (
                    "description",
                    ckeditor.fields.RichTextField(
                        max_length=255, verbose_name="Инструкция"
                    ),
                ),
                (
                    "bank_name",
                    models.CharField(
                        blank=True, null=True, verbose_name="Название банка"
                    ),
                ),
                (
                    "icon",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="payments",
                        verbose_name="Иконка",
                    ),
                ),
            ],
            options={
                "verbose_name": "Оплата",
                "verbose_name_plural": "Платежи",
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Email"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(max_length=150, verbose_name="first name"),
                ),
                (
                    "last_name",
                    models.CharField(max_length=150, verbose_name="last name"),
                ),
                (
                    "surname",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Отчество"
                    ),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="Verification"),
                ),
                ("phone", models.CharField(max_length=100, verbose_name="Телефон")),
                (
                    "password_readable",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "verification_code",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Verification code"
                    ),
                ),
                (
                    "verification_code_time",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Verification code created time",
                    ),
                ),
                (
                    "password_reset_token",
                    models.CharField(
                        blank=True,
                        max_length=100,
                        null=True,
                        unique=True,
                        verbose_name="Password Reset",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        default="default.png",
                        upload_to=src.base.services.get_path_upload_photo,
                        validators=[src.base.services.validate_size_image],
                        verbose_name="Аватар",
                    ),
                ),
                (
                    "dateofborn",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата рождения"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        choices=[("м", "Муж"), ("ж", "Жен")],
                        max_length=3,
                        verbose_name="Пол",
                    ),
                ),
                (
                    "inn",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="ИНН"
                    ),
                ),
                (
                    "date_of_issue",
                    models.DateField(blank=True, null=True, verbose_name="Дата выдачи"),
                ),
                (
                    "issued_by",
                    models.CharField(
                        blank=True, null=True, verbose_name="Орган выдачи"
                    ),
                ),
                (
                    "validity",
                    models.DateField(
                        blank=True, null=True, verbose_name="Срок действия"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Город"
                    ),
                ),
                (
                    "passport_front",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="passports",
                        verbose_name="Фото паспорта, передняя сторона",
                    ),
                ),
                (
                    "passport_back",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="passports",
                        verbose_name="Фото паспорта, задняя сторона",
                    ),
                ),
                (
                    "passport_id",
                    models.CharField(
                        blank=True,
                        max_length=8,
                        null=True,
                        unique=True,
                        verbose_name="Загран паспорт",
                    ),
                ),
                (
                    "county",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Страна"
                    ),
                ),
                (
                    "tourist_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="ID Туриста"
                    ),
                ),
                (
                    "bcard_number",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Номер бонусного счёта",
                    ),
                ),
                (
                    "bcard_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="ID бонусного счёта"
                    ),
                ),
                ("created", models.IntegerField(blank=True, default=1, null=True)),
                (
                    "first_name_en",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Имя на латинице",
                    ),
                ),
                (
                    "last_name_en",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="Фамилия на латинице",
                    ),
                ),
                (
                    "groups",
                    models.ForeignKey(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Пользователь",
                "verbose_name_plural": "Пользователи",
                "db_table": "user",
            },
            managers=[
                ("objects", src.account.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="BonusHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=255, verbose_name="Название бонуса"),
                ),
                ("created_at", models.DateTimeField(verbose_name="Дата")),
                ("valid", models.DateField(verbose_name="Действителен до")),
                ("sum", models.IntegerField(default=0, verbose_name="Сумма")),
                (
                    "currency",
                    models.CharField(
                        choices=[("СОМ", "СОМ"), ("USD", "USD")],
                        default="СОМ",
                        max_length=5,
                        verbose_name="Валюта",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bonus_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "История бонусов",
                "verbose_name_plural": "История бонусов",
            },
        ),
        migrations.CreateModel(
            name="RequestTour",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, "Новая заявка"),
                            (2, "В процессе покупки"),
                            (3, "Тур куплен"),
                            (4, "Отклонено"),
                        ],
                        default=2,
                        verbose_name="Статус",
                    ),
                ),
                (
                    "request_number",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Номер заявки"
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Имя"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Фамилия"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Телефон"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=100, null=True, verbose_name="E-mail"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("Муж", "Муж"), ("Жен", "Жен")],
                        max_length=3,
                        null=True,
                        verbose_name="Пол",
                    ),
                ),
                (
                    "dateofborn",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата рождения"
                    ),
                ),
                (
                    "inn",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="ИНН"
                    ),
                ),
                (
                    "passport_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ID пасспорта",
                    ),
                ),
                (
                    "date_of_issue",
                    models.DateField(blank=True, null=True, verbose_name="Дата выдачи"),
                ),
                (
                    "issued_by",
                    models.CharField(
                        blank=True, null=True, verbose_name="Орган выдачи"
                    ),
                ),
                (
                    "validity",
                    models.DateField(
                        blank=True, null=True, verbose_name="Срок действия"
                    ),
                ),
                (
                    "city",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Город"
                    ),
                ),
                (
                    "country",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Страна"
                    ),
                ),
                (
                    "passport_front",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="passports",
                        verbose_name="Фото паспорта, передняя сторона",
                    ),
                ),
                (
                    "passport_back",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="passports",
                        verbose_name="Фото паспорта, задняя сторона",
                    ),
                ),
                (
                    "operatorlink",
                    models.URLField(
                        blank=True,
                        max_length=1000,
                        null=True,
                        verbose_name="Ссылка на оператора",
                    ),
                ),
                (
                    "price",
                    models.CharField(
                        blank=True, max_length=255, null=True, verbose_name="Цена"
                    ),
                ),
                (
                    "tourid",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="Код тура"
                    ),
                ),
                (
                    "bonuses",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        default=0,
                        max_digits=10,
                        null=True,
                        verbose_name="Бонусы",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Дата создания"
                    ),
                ),
                (
                    "surcharge",
                    models.CharField(
                        blank=True,
                        default=10,
                        max_length=255,
                        null=True,
                        verbose_name="Доплата",
                    ),
                ),
                (
                    "agreement",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="agreements",
                        verbose_name="Договор",
                    ),
                ),
                (
                    "currency",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="main.currency",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Клиент",
                    ),
                ),
            ],
            options={
                "verbose_name": "Заявка",
                "verbose_name_plural": "Заявки",
            },
        ),
        migrations.CreateModel(
            name="Document",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Название документа",
                    ),
                ),
                (
                    "file",
                    models.FileField(upload_to="documents", verbose_name="Документ"),
                ),
                (
                    "created_at",
                    models.DateField(auto_now_add=True, verbose_name="Дата создания"),
                ),
                (
                    "request",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="account.requesttour",
                    ),
                ),
            ],
            options={
                "verbose_name": "Документ",
                "verbose_name_plural": "Прикрепленные документы",
            },
        ),
        migrations.CreateModel(
            name="Traveler",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dateofborn",
                    models.DateField(
                        blank=True, null=True, verbose_name="Дата рождения"
                    ),
                ),
                ("first_name", models.CharField(max_length=100, verbose_name="Имя")),
                ("last_name", models.CharField(max_length=100, verbose_name="Фамилия")),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("Муж", "Муж"), ("Жен", "Жен")],
                        max_length=3,
                        null=True,
                        verbose_name="Пол",
                    ),
                ),
                (
                    "main",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="travelers",
                        to="account.requesttour",
                    ),
                ),
            ],
            options={
                "verbose_name": "Путешественник",
                "verbose_name_plural": "Путешественники",
            },
        ),
    ]
